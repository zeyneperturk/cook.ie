{"ast":null,"code":"import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\r\n * The {@link differenceInCalendarWeeks} function options.\r\n */\n\n/**\r\n * @name differenceInCalendarWeeks\r\n * @category Week Helpers\r\n * @summary Get the number of calendar weeks between the given dates.\r\n *\r\n * @description\r\n * Get the number of calendar weeks between the given dates.\r\n *\r\n * @param laterDate - The later date\r\n * @param earlierDate - The earlier date\r\n * @param options - An object with options.\r\n *\r\n * @returns The number of calendar weeks\r\n *\r\n * @example\r\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\r\n * const result = differenceInCalendarWeeks(\r\n *   new Date(2014, 6, 20),\r\n *   new Date(2014, 6, 5)\r\n * )\r\n * //=> 3\r\n *\r\n * @example\r\n * // If the week starts on Monday,\r\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\r\n * const result = differenceInCalendarWeeks(\r\n *   new Date(2014, 6, 20),\r\n *   new Date(2014, 6, 5),\r\n *   { weekStartsOn: 1 }\r\n * )\r\n * //=> 2\r\n */\nexport function differenceInCalendarWeeks(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(options?.in, laterDate, earlierDate);\n  const laterStartOfWeek = startOfWeek(laterDate_, options);\n  const earlierStartOfWeek = startOfWeek(earlierDate_, options);\n  const laterTimestamp = +laterStartOfWeek - getTimezoneOffsetInMilliseconds(laterStartOfWeek);\n  const earlierTimestamp = +earlierStartOfWeek - getTimezoneOffsetInMilliseconds(earlierStartOfWeek);\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInWeek);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarWeeks;","map":{"version":3,"names":["getTimezoneOffsetInMilliseconds","normalizeDates","millisecondsInWeek","startOfWeek","differenceInCalendarWeeks","laterDate","earlierDate","options","laterDate_","earlierDate_","in","laterStartOfWeek","earlierStartOfWeek","laterTimestamp","earlierTimestamp","Math","round"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/differenceInCalendarWeeks.js"],"sourcesContent":["import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\r\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\r\nimport { millisecondsInWeek } from \"./constants.js\";\r\nimport { startOfWeek } from \"./startOfWeek.js\";\r\n\r\n/**\r\n * The {@link differenceInCalendarWeeks} function options.\r\n */\r\n\r\n/**\r\n * @name differenceInCalendarWeeks\r\n * @category Week Helpers\r\n * @summary Get the number of calendar weeks between the given dates.\r\n *\r\n * @description\r\n * Get the number of calendar weeks between the given dates.\r\n *\r\n * @param laterDate - The later date\r\n * @param earlierDate - The earlier date\r\n * @param options - An object with options.\r\n *\r\n * @returns The number of calendar weeks\r\n *\r\n * @example\r\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\r\n * const result = differenceInCalendarWeeks(\r\n *   new Date(2014, 6, 20),\r\n *   new Date(2014, 6, 5)\r\n * )\r\n * //=> 3\r\n *\r\n * @example\r\n * // If the week starts on Monday,\r\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\r\n * const result = differenceInCalendarWeeks(\r\n *   new Date(2014, 6, 20),\r\n *   new Date(2014, 6, 5),\r\n *   { weekStartsOn: 1 }\r\n * )\r\n * //=> 2\r\n */\r\nexport function differenceInCalendarWeeks(laterDate, earlierDate, options) {\r\n  const [laterDate_, earlierDate_] = normalizeDates(\r\n    options?.in,\r\n    laterDate,\r\n    earlierDate,\r\n  );\r\n\r\n  const laterStartOfWeek = startOfWeek(laterDate_, options);\r\n  const earlierStartOfWeek = startOfWeek(earlierDate_, options);\r\n\r\n  const laterTimestamp =\r\n    +laterStartOfWeek - getTimezoneOffsetInMilliseconds(laterStartOfWeek);\r\n  const earlierTimestamp =\r\n    +earlierStartOfWeek - getTimezoneOffsetInMilliseconds(earlierStartOfWeek);\r\n\r\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInWeek);\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default differenceInCalendarWeeks;\r\n"],"mappings":"AAAA,SAASA,+BAA+B,QAAQ,2CAA2C;AAC3F,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,kBAAkB,QAAQ,gBAAgB;AACnD,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,yBAAyBA,CAACC,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAE;EACzE,MAAM,CAACC,UAAU,EAAEC,YAAY,CAAC,GAAGR,cAAc,CAC/CM,OAAO,EAAEG,EAAE,EACXL,SAAS,EACTC,WACF,CAAC;EAED,MAAMK,gBAAgB,GAAGR,WAAW,CAACK,UAAU,EAAED,OAAO,CAAC;EACzD,MAAMK,kBAAkB,GAAGT,WAAW,CAACM,YAAY,EAAEF,OAAO,CAAC;EAE7D,MAAMM,cAAc,GAClB,CAACF,gBAAgB,GAAGX,+BAA+B,CAACW,gBAAgB,CAAC;EACvE,MAAMG,gBAAgB,GACpB,CAACF,kBAAkB,GAAGZ,+BAA+B,CAACY,kBAAkB,CAAC;EAE3E,OAAOG,IAAI,CAACC,KAAK,CAAC,CAACH,cAAc,GAAGC,gBAAgB,IAAIZ,kBAAkB,CAAC;AAC7E;;AAEA;AACA,eAAeE,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}