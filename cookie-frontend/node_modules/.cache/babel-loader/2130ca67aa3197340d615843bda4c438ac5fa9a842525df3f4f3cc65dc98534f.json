{"ast":null,"code":"import { endOfWeek } from \"./endOfWeek.js\";\n\n/**\r\n * The {@link endOfISOWeek} function options.\r\n */\n\n/**\r\n * @name endOfISOWeek\r\n * @category ISO Week Helpers\r\n * @summary Return the end of an ISO week for the given date.\r\n *\r\n * @description\r\n * Return the end of an ISO week for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The original date\r\n * @param options - An object with options\r\n *\r\n * @returns The end of an ISO week\r\n *\r\n * @example\r\n * // The end of an ISO week for 2 September 2014 11:55:00:\r\n * const result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\r\n * //=> Sun Sep 07 2014 23:59:59.999\r\n */\nexport function endOfISOWeek(date, options) {\n  return endOfWeek(date, {\n    ...options,\n    weekStartsOn: 1\n  });\n}\n\n// Fallback for modularized imports:\nexport default endOfISOWeek;","map":{"version":3,"names":["endOfWeek","endOfISOWeek","date","options","weekStartsOn"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/endOfISOWeek.js"],"sourcesContent":["import { endOfWeek } from \"./endOfWeek.js\";\r\n\r\n/**\r\n * The {@link endOfISOWeek} function options.\r\n */\r\n\r\n/**\r\n * @name endOfISOWeek\r\n * @category ISO Week Helpers\r\n * @summary Return the end of an ISO week for the given date.\r\n *\r\n * @description\r\n * Return the end of an ISO week for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The original date\r\n * @param options - An object with options\r\n *\r\n * @returns The end of an ISO week\r\n *\r\n * @example\r\n * // The end of an ISO week for 2 September 2014 11:55:00:\r\n * const result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\r\n * //=> Sun Sep 07 2014 23:59:59.999\r\n */\r\nexport function endOfISOWeek(date, options) {\r\n  return endOfWeek(date, { ...options, weekStartsOn: 1 });\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default endOfISOWeek;\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,gBAAgB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC1C,OAAOH,SAAS,CAACE,IAAI,EAAE;IAAE,GAAGC,OAAO;IAAEC,YAAY,EAAE;EAAE,CAAC,CAAC;AACzD;;AAEA;AACA,eAAeH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}