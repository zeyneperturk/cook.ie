{"ast":null,"code":"import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\r\n * The {@link isSameMonth} function options.\r\n */\n\n/**\r\n * @name isSameMonth\r\n * @category Month Helpers\r\n * @summary Are the given dates in the same month (and year)?\r\n *\r\n * @description\r\n * Are the given dates in the same month (and year)?\r\n *\r\n * @param laterDate - The first date to check\r\n * @param earlierDate - The second date to check\r\n * @param options - An object with options\r\n *\r\n * @returns The dates are in the same month (and year)\r\n *\r\n * @example\r\n * // Are 2 September 2014 and 25 September 2014 in the same month?\r\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 2 September 2014 and 25 September 2015 in the same month?\r\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\r\n * //=> false\r\n */\nexport function isSameMonth(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(options?.in, laterDate, earlierDate);\n  return laterDate_.getFullYear() === earlierDate_.getFullYear() && laterDate_.getMonth() === earlierDate_.getMonth();\n}\n\n// Fallback for modularized imports:\nexport default isSameMonth;","map":{"version":3,"names":["normalizeDates","isSameMonth","laterDate","earlierDate","options","laterDate_","earlierDate_","in","getFullYear","getMonth"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/isSameMonth.js"],"sourcesContent":["import { normalizeDates } from \"./_lib/normalizeDates.js\";\r\n\r\n/**\r\n * The {@link isSameMonth} function options.\r\n */\r\n\r\n/**\r\n * @name isSameMonth\r\n * @category Month Helpers\r\n * @summary Are the given dates in the same month (and year)?\r\n *\r\n * @description\r\n * Are the given dates in the same month (and year)?\r\n *\r\n * @param laterDate - The first date to check\r\n * @param earlierDate - The second date to check\r\n * @param options - An object with options\r\n *\r\n * @returns The dates are in the same month (and year)\r\n *\r\n * @example\r\n * // Are 2 September 2014 and 25 September 2014 in the same month?\r\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 2 September 2014 and 25 September 2015 in the same month?\r\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\r\n * //=> false\r\n */\r\nexport function isSameMonth(laterDate, earlierDate, options) {\r\n  const [laterDate_, earlierDate_] = normalizeDates(\r\n    options?.in,\r\n    laterDate,\r\n    earlierDate,\r\n  );\r\n  return (\r\n    laterDate_.getFullYear() === earlierDate_.getFullYear() &&\r\n    laterDate_.getMonth() === earlierDate_.getMonth()\r\n  );\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default isSameMonth;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,0BAA0B;;AAEzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAE;EAC3D,MAAM,CAACC,UAAU,EAAEC,YAAY,CAAC,GAAGN,cAAc,CAC/CI,OAAO,EAAEG,EAAE,EACXL,SAAS,EACTC,WACF,CAAC;EACD,OACEE,UAAU,CAACG,WAAW,CAAC,CAAC,KAAKF,YAAY,CAACE,WAAW,CAAC,CAAC,IACvDH,UAAU,CAACI,QAAQ,CAAC,CAAC,KAAKH,YAAY,CAACG,QAAQ,CAAC,CAAC;AAErD;;AAEA;AACA,eAAeR,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}