{"ast":null,"code":"import { constructFrom } from \"./constructFrom.js\";\nimport { constructNow } from \"./constructNow.js\";\nimport { isSameISOWeek } from \"./isSameISOWeek.js\";\n\n/**\r\n * The {@link isThisISOWeek} function options.\r\n */\n\n/**\r\n * @name isThisISOWeek\r\n * @category ISO Week Helpers\r\n * @summary Is the given date in the same ISO week as the current date?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date in the same ISO week as the current date?\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param date - The date to check\r\n * @param options - An object with options\r\n *\r\n * @returns The date is in this ISO week\r\n *\r\n * @example\r\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\r\n * const result = isThisISOWeek(new Date(2014, 8, 22))\r\n * //=> true\r\n */\nexport function isThisISOWeek(date, options) {\n  return isSameISOWeek(constructFrom(options?.in || date, date), constructNow(options?.in || date));\n}\n\n// Fallback for modularized imports:\nexport default isThisISOWeek;","map":{"version":3,"names":["constructFrom","constructNow","isSameISOWeek","isThisISOWeek","date","options","in"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/isThisISOWeek.js"],"sourcesContent":["import { constructFrom } from \"./constructFrom.js\";\r\nimport { constructNow } from \"./constructNow.js\";\r\nimport { isSameISOWeek } from \"./isSameISOWeek.js\";\r\n\r\n/**\r\n * The {@link isThisISOWeek} function options.\r\n */\r\n\r\n/**\r\n * @name isThisISOWeek\r\n * @category ISO Week Helpers\r\n * @summary Is the given date in the same ISO week as the current date?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date in the same ISO week as the current date?\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param date - The date to check\r\n * @param options - An object with options\r\n *\r\n * @returns The date is in this ISO week\r\n *\r\n * @example\r\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\r\n * const result = isThisISOWeek(new Date(2014, 8, 22))\r\n * //=> true\r\n */\r\nexport function isThisISOWeek(date, options) {\r\n  return isSameISOWeek(\r\n    constructFrom(options?.in || date, date),\r\n    constructNow(options?.in || date),\r\n  );\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default isThisISOWeek;\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,aAAa,QAAQ,oBAAoB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC3C,OAAOH,aAAa,CAClBF,aAAa,CAACK,OAAO,EAAEC,EAAE,IAAIF,IAAI,EAAEA,IAAI,CAAC,EACxCH,YAAY,CAACI,OAAO,EAAEC,EAAE,IAAIF,IAAI,CAClC,CAAC;AACH;;AAEA;AACA,eAAeD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}