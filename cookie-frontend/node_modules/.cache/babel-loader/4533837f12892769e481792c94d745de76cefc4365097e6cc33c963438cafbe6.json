{"ast":null,"code":"import { toDate } from \"./toDate.js\";\n\n/**\r\n * @name isLeapYear\r\n * @category Year Helpers\r\n * @summary Is the given date in the leap year?\r\n *\r\n * @description\r\n * Is the given date in the leap year?\r\n *\r\n * @param date - The date to check\r\n * @param options - The options object\r\n *\r\n * @returns The date is in the leap year\r\n *\r\n * @example\r\n * // Is 1 September 2012 in the leap year?\r\n * const result = isLeapYear(new Date(2012, 8, 1))\r\n * //=> true\r\n */\nexport function isLeapYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n\n// Fallback for modularized imports:\nexport default isLeapYear;","map":{"version":3,"names":["toDate","isLeapYear","date","options","_date","in","year","getFullYear"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/isLeapYear.js"],"sourcesContent":["import { toDate } from \"./toDate.js\";\r\n\r\n/**\r\n * @name isLeapYear\r\n * @category Year Helpers\r\n * @summary Is the given date in the leap year?\r\n *\r\n * @description\r\n * Is the given date in the leap year?\r\n *\r\n * @param date - The date to check\r\n * @param options - The options object\r\n *\r\n * @returns The date is in the leap year\r\n *\r\n * @example\r\n * // Is 1 September 2012 in the leap year?\r\n * const result = isLeapYear(new Date(2012, 8, 1))\r\n * //=> true\r\n */\r\nexport function isLeapYear(date, options) {\r\n  const _date = toDate(date, options?.in);\r\n  const year = _date.getFullYear();\r\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default isLeapYear;\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAa;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACxC,MAAMC,KAAK,GAAGJ,MAAM,CAACE,IAAI,EAAEC,OAAO,EAAEE,EAAE,CAAC;EACvC,MAAMC,IAAI,GAAGF,KAAK,CAACG,WAAW,CAAC,CAAC;EAChC,OAAOD,IAAI,GAAG,GAAG,KAAK,CAAC,IAAKA,IAAI,GAAG,CAAC,KAAK,CAAC,IAAIA,IAAI,GAAG,GAAG,KAAK,CAAE;AACjE;;AAEA;AACA,eAAeL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}