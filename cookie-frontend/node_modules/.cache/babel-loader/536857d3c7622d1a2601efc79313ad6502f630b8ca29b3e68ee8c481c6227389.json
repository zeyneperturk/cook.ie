{"ast":null,"code":"import { differenceInCalendarWeeks } from \"./differenceInCalendarWeeks.js\";\nimport { lastDayOfMonth } from \"./lastDayOfMonth.js\";\nimport { startOfMonth } from \"./startOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\r\n * The {@link getWeeksInMonth} function options.\r\n */\n\n/**\r\n * @name getWeeksInMonth\r\n * @category Week Helpers\r\n * @summary Get the number of calendar weeks a month spans.\r\n *\r\n * @description\r\n * Get the number of calendar weeks the month in the given date spans.\r\n *\r\n * @param date - The given date\r\n * @param options - An object with options.\r\n *\r\n * @returns The number of calendar weeks\r\n *\r\n * @example\r\n * // How many calendar weeks does February 2015 span?\r\n * const result = getWeeksInMonth(new Date(2015, 1, 8))\r\n * //=> 4\r\n *\r\n * @example\r\n * // If the week starts on Monday,\r\n * // how many calendar weeks does July 2017 span?\r\n * const result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\r\n * //=> 6\r\n */\nexport function getWeeksInMonth(date, options) {\n  const contextDate = toDate(date, options?.in);\n  return differenceInCalendarWeeks(lastDayOfMonth(contextDate, options), startOfMonth(contextDate, options), options) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeeksInMonth;","map":{"version":3,"names":["differenceInCalendarWeeks","lastDayOfMonth","startOfMonth","toDate","getWeeksInMonth","date","options","contextDate","in"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/getWeeksInMonth.js"],"sourcesContent":["import { differenceInCalendarWeeks } from \"./differenceInCalendarWeeks.js\";\r\nimport { lastDayOfMonth } from \"./lastDayOfMonth.js\";\r\nimport { startOfMonth } from \"./startOfMonth.js\";\r\nimport { toDate } from \"./toDate.js\";\r\n\r\n/**\r\n * The {@link getWeeksInMonth} function options.\r\n */\r\n\r\n/**\r\n * @name getWeeksInMonth\r\n * @category Week Helpers\r\n * @summary Get the number of calendar weeks a month spans.\r\n *\r\n * @description\r\n * Get the number of calendar weeks the month in the given date spans.\r\n *\r\n * @param date - The given date\r\n * @param options - An object with options.\r\n *\r\n * @returns The number of calendar weeks\r\n *\r\n * @example\r\n * // How many calendar weeks does February 2015 span?\r\n * const result = getWeeksInMonth(new Date(2015, 1, 8))\r\n * //=> 4\r\n *\r\n * @example\r\n * // If the week starts on Monday,\r\n * // how many calendar weeks does July 2017 span?\r\n * const result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\r\n * //=> 6\r\n */\r\nexport function getWeeksInMonth(date, options) {\r\n  const contextDate = toDate(date, options?.in);\r\n  return (\r\n    differenceInCalendarWeeks(\r\n      lastDayOfMonth(contextDate, options),\r\n      startOfMonth(contextDate, options),\r\n      options,\r\n    ) + 1\r\n  );\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default getWeeksInMonth;\r\n"],"mappings":"AAAA,SAASA,yBAAyB,QAAQ,gCAAgC;AAC1E,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,MAAM,QAAQ,aAAa;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC7C,MAAMC,WAAW,GAAGJ,MAAM,CAACE,IAAI,EAAEC,OAAO,EAAEE,EAAE,CAAC;EAC7C,OACER,yBAAyB,CACvBC,cAAc,CAACM,WAAW,EAAED,OAAO,CAAC,EACpCJ,YAAY,CAACK,WAAW,EAAED,OAAO,CAAC,EAClCA,OACF,CAAC,GAAG,CAAC;AAET;;AAEA;AACA,eAAeF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}