{"ast":null,"code":"import { toDate } from \"./toDate.js\";\n\n/**\r\n * The {@link endOfHour} function options.\r\n */\n\n/**\r\n * @name endOfHour\r\n * @category Hour Helpers\r\n * @summary Return the end of an hour for the given date.\r\n *\r\n * @description\r\n * Return the end of an hour for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The original date\r\n * @param options - An object with options\r\n *\r\n * @returns The end of an hour\r\n *\r\n * @example\r\n * // The end of an hour for 2 September 2014 11:55:00:\r\n * const result = endOfHour(new Date(2014, 8, 2, 11, 55))\r\n * //=> Tue Sep 02 2014 11:59:59.999\r\n */\nexport function endOfHour(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setMinutes(59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfHour;","map":{"version":3,"names":["toDate","endOfHour","date","options","_date","in","setMinutes"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/endOfHour.js"],"sourcesContent":["import { toDate } from \"./toDate.js\";\r\n\r\n/**\r\n * The {@link endOfHour} function options.\r\n */\r\n\r\n/**\r\n * @name endOfHour\r\n * @category Hour Helpers\r\n * @summary Return the end of an hour for the given date.\r\n *\r\n * @description\r\n * Return the end of an hour for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The original date\r\n * @param options - An object with options\r\n *\r\n * @returns The end of an hour\r\n *\r\n * @example\r\n * // The end of an hour for 2 September 2014 11:55:00:\r\n * const result = endOfHour(new Date(2014, 8, 2, 11, 55))\r\n * //=> Tue Sep 02 2014 11:59:59.999\r\n */\r\nexport function endOfHour(date, options) {\r\n  const _date = toDate(date, options?.in);\r\n  _date.setMinutes(59, 59, 999);\r\n  return _date;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default endOfHour;\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAa;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACvC,MAAMC,KAAK,GAAGJ,MAAM,CAACE,IAAI,EAAEC,OAAO,EAAEE,EAAE,CAAC;EACvCD,KAAK,CAACE,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EAC7B,OAAOF,KAAK;AACd;;AAEA;AACA,eAAeH,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}