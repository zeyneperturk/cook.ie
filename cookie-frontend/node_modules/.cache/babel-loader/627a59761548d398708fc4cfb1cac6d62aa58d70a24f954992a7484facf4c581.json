{"ast":null,"code":"import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\r\n * The {@link startOfISOWeek} function options.\r\n */\n\n/**\r\n * @name startOfISOWeek\r\n * @category ISO Week Helpers\r\n * @summary Return the start of an ISO week for the given date.\r\n *\r\n * @description\r\n * Return the start of an ISO week for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The original date\r\n * @param options - An object with options\r\n *\r\n * @returns The start of an ISO week\r\n *\r\n * @example\r\n * // The start of an ISO week for 2 September 2014 11:55:00:\r\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\r\n * //=> Mon Sep 01 2014 00:00:00\r\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, {\n    ...options,\n    weekStartsOn: 1\n  });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;","map":{"version":3,"names":["startOfWeek","startOfISOWeek","date","options","weekStartsOn"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/startOfISOWeek.js"],"sourcesContent":["import { startOfWeek } from \"./startOfWeek.js\";\r\n\r\n/**\r\n * The {@link startOfISOWeek} function options.\r\n */\r\n\r\n/**\r\n * @name startOfISOWeek\r\n * @category ISO Week Helpers\r\n * @summary Return the start of an ISO week for the given date.\r\n *\r\n * @description\r\n * Return the start of an ISO week for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The original date\r\n * @param options - An object with options\r\n *\r\n * @returns The start of an ISO week\r\n *\r\n * @example\r\n * // The start of an ISO week for 2 September 2014 11:55:00:\r\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\r\n * //=> Mon Sep 01 2014 00:00:00\r\n */\r\nexport function startOfISOWeek(date, options) {\r\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default startOfISOWeek;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC5C,OAAOH,WAAW,CAACE,IAAI,EAAE;IAAE,GAAGC,OAAO;IAAEC,YAAY,EAAE;EAAE,CAAC,CAAC;AAC3D;;AAEA;AACA,eAAeH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}