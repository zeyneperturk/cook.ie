{"ast":null,"code":"import { constructFrom } from \"./constructFrom.js\";\nimport { subDays } from \"./subDays.js\";\nimport { subMonths } from \"./subMonths.js\";\n\n/**\r\n * The {@link sub} function options.\r\n */\n\n/**\r\n * @name sub\r\n * @category Common Helpers\r\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\r\n *\r\n * @description\r\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The date to be changed\r\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted\r\n * @param options - An object with options\r\n *\r\n * | Key     | Description                        |\r\n * |---------|------------------------------------|\r\n * | years   | Amount of years to be subtracted   |\r\n * | months  | Amount of months to be subtracted  |\r\n * | weeks   | Amount of weeks to be subtracted   |\r\n * | days    | Amount of days to be subtracted    |\r\n * | hours   | Amount of hours to be subtracted   |\r\n * | minutes | Amount of minutes to be subtracted |\r\n * | seconds | Amount of seconds to be subtracted |\r\n *\r\n * All values default to 0\r\n *\r\n * @returns The new date with the seconds subtracted\r\n *\r\n * @example\r\n * // Subtract the following duration from 15 June 2017 15:29:20\r\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\r\n *   years: 2,\r\n *   months: 9,\r\n *   weeks: 1,\r\n *   days: 7,\r\n *   hours: 5,\r\n *   minutes: 9,\r\n *   seconds: 30\r\n * })\r\n * //=> Mon Sep 1 2014 10:19:50\r\n */\nexport function sub(date, duration, options) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0\n  } = duration;\n  const withoutMonths = subMonths(date, months + years * 12, options);\n  const withoutDays = subDays(withoutMonths, days + weeks * 7, options);\n  const minutesToSub = minutes + hours * 60;\n  const secondsToSub = seconds + minutesToSub * 60;\n  const msToSub = secondsToSub * 1000;\n  return constructFrom(options?.in || date, +withoutDays - msToSub);\n}\n\n// Fallback for modularized imports:\nexport default sub;","map":{"version":3,"names":["constructFrom","subDays","subMonths","sub","date","duration","options","years","months","weeks","days","hours","minutes","seconds","withoutMonths","withoutDays","minutesToSub","secondsToSub","msToSub","in"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/sub.js"],"sourcesContent":["import { constructFrom } from \"./constructFrom.js\";\r\nimport { subDays } from \"./subDays.js\";\r\nimport { subMonths } from \"./subMonths.js\";\r\n\r\n/**\r\n * The {@link sub} function options.\r\n */\r\n\r\n/**\r\n * @name sub\r\n * @category Common Helpers\r\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\r\n *\r\n * @description\r\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The date to be changed\r\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted\r\n * @param options - An object with options\r\n *\r\n * | Key     | Description                        |\r\n * |---------|------------------------------------|\r\n * | years   | Amount of years to be subtracted   |\r\n * | months  | Amount of months to be subtracted  |\r\n * | weeks   | Amount of weeks to be subtracted   |\r\n * | days    | Amount of days to be subtracted    |\r\n * | hours   | Amount of hours to be subtracted   |\r\n * | minutes | Amount of minutes to be subtracted |\r\n * | seconds | Amount of seconds to be subtracted |\r\n *\r\n * All values default to 0\r\n *\r\n * @returns The new date with the seconds subtracted\r\n *\r\n * @example\r\n * // Subtract the following duration from 15 June 2017 15:29:20\r\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\r\n *   years: 2,\r\n *   months: 9,\r\n *   weeks: 1,\r\n *   days: 7,\r\n *   hours: 5,\r\n *   minutes: 9,\r\n *   seconds: 30\r\n * })\r\n * //=> Mon Sep 1 2014 10:19:50\r\n */\r\nexport function sub(date, duration, options) {\r\n  const {\r\n    years = 0,\r\n    months = 0,\r\n    weeks = 0,\r\n    days = 0,\r\n    hours = 0,\r\n    minutes = 0,\r\n    seconds = 0,\r\n  } = duration;\r\n\r\n  const withoutMonths = subMonths(date, months + years * 12, options);\r\n  const withoutDays = subDays(withoutMonths, days + weeks * 7, options);\r\n\r\n  const minutesToSub = minutes + hours * 60;\r\n  const secondsToSub = seconds + minutesToSub * 60;\r\n  const msToSub = secondsToSub * 1000;\r\n\r\n  return constructFrom(options?.in || date, +withoutDays - msToSub);\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default sub;\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,SAAS,QAAQ,gBAAgB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EAC3C,MAAM;IACJC,KAAK,GAAG,CAAC;IACTC,MAAM,GAAG,CAAC;IACVC,KAAK,GAAG,CAAC;IACTC,IAAI,GAAG,CAAC;IACRC,KAAK,GAAG,CAAC;IACTC,OAAO,GAAG,CAAC;IACXC,OAAO,GAAG;EACZ,CAAC,GAAGR,QAAQ;EAEZ,MAAMS,aAAa,GAAGZ,SAAS,CAACE,IAAI,EAAEI,MAAM,GAAGD,KAAK,GAAG,EAAE,EAAED,OAAO,CAAC;EACnE,MAAMS,WAAW,GAAGd,OAAO,CAACa,aAAa,EAAEJ,IAAI,GAAGD,KAAK,GAAG,CAAC,EAAEH,OAAO,CAAC;EAErE,MAAMU,YAAY,GAAGJ,OAAO,GAAGD,KAAK,GAAG,EAAE;EACzC,MAAMM,YAAY,GAAGJ,OAAO,GAAGG,YAAY,GAAG,EAAE;EAChD,MAAME,OAAO,GAAGD,YAAY,GAAG,IAAI;EAEnC,OAAOjB,aAAa,CAACM,OAAO,EAAEa,EAAE,IAAIf,IAAI,EAAE,CAACW,WAAW,GAAGG,OAAO,CAAC;AACnE;;AAEA;AACA,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}