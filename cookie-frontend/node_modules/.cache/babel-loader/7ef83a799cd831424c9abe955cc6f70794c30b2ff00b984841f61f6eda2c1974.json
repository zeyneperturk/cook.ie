{"ast":null,"code":"import { toDate } from \"./toDate.js\";\n\n/**\r\n * @name compareAsc\r\n * @category Common Helpers\r\n * @summary Compare the two dates and return -1, 0 or 1.\r\n *\r\n * @description\r\n * Compare the two dates and return 1 if the first date is after the second,\r\n * -1 if the first date is before the second or 0 if dates are equal.\r\n *\r\n * @param dateLeft - The first date to compare\r\n * @param dateRight - The second date to compare\r\n *\r\n * @returns The result of the comparison\r\n *\r\n * @example\r\n * // Compare 11 February 1987 and 10 July 1989:\r\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\r\n * //=> -1\r\n *\r\n * @example\r\n * // Sort the array of dates:\r\n * const result = [\r\n *   new Date(1995, 6, 2),\r\n *   new Date(1987, 1, 11),\r\n *   new Date(1989, 6, 10)\r\n * ].sort(compareAsc)\r\n * //=> [\r\n * //   Wed Feb 11 1987 00:00:00,\r\n * //   Mon Jul 10 1989 00:00:00,\r\n * //   Sun Jul 02 1995 00:00:00\r\n * // ]\r\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n  if (diff < 0) return -1;else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;","map":{"version":3,"names":["toDate","compareAsc","dateLeft","dateRight","diff"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/compareAsc.js"],"sourcesContent":["import { toDate } from \"./toDate.js\";\r\n\r\n/**\r\n * @name compareAsc\r\n * @category Common Helpers\r\n * @summary Compare the two dates and return -1, 0 or 1.\r\n *\r\n * @description\r\n * Compare the two dates and return 1 if the first date is after the second,\r\n * -1 if the first date is before the second or 0 if dates are equal.\r\n *\r\n * @param dateLeft - The first date to compare\r\n * @param dateRight - The second date to compare\r\n *\r\n * @returns The result of the comparison\r\n *\r\n * @example\r\n * // Compare 11 February 1987 and 10 July 1989:\r\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\r\n * //=> -1\r\n *\r\n * @example\r\n * // Sort the array of dates:\r\n * const result = [\r\n *   new Date(1995, 6, 2),\r\n *   new Date(1987, 1, 11),\r\n *   new Date(1989, 6, 10)\r\n * ].sort(compareAsc)\r\n * //=> [\r\n * //   Wed Feb 11 1987 00:00:00,\r\n * //   Mon Jul 10 1989 00:00:00,\r\n * //   Sun Jul 02 1995 00:00:00\r\n * // ]\r\n */\r\nexport function compareAsc(dateLeft, dateRight) {\r\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\r\n\r\n  if (diff < 0) return -1;\r\n  else if (diff > 0) return 1;\r\n\r\n  // Return 0 if diff is 0; return NaN if diff is NaN\r\n  return diff;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default compareAsc;\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAa;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,QAAQ,EAAEC,SAAS,EAAE;EAC9C,MAAMC,IAAI,GAAG,CAACJ,MAAM,CAACE,QAAQ,CAAC,GAAG,CAACF,MAAM,CAACG,SAAS,CAAC;EAEnD,IAAIC,IAAI,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,KACnB,IAAIA,IAAI,GAAG,CAAC,EAAE,OAAO,CAAC;;EAE3B;EACA,OAAOA,IAAI;AACb;;AAEA;AACA,eAAeH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}