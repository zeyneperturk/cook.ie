{"ast":null,"code":"import { addSeconds } from \"./addSeconds.js\";\n\n/**\r\n * The {@link subSeconds} function options.\r\n */\n\n/**\r\n * Subtract the specified number of seconds from the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The date to be changed\r\n * @param amount - The amount of seconds to be subtracted.\r\n * @param options - The options\r\n *\r\n * @returns The new date with the seconds subtracted\r\n *\r\n * @example\r\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\r\n * const result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\r\n * //=> Thu Jul 10 2014 12:44:30\r\n */\nexport function subSeconds(date, amount, options) {\n  return addSeconds(date, -amount, options);\n}\n\n// Fallback for modularized imports:\nexport default subSeconds;","map":{"version":3,"names":["addSeconds","subSeconds","date","amount","options"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/subSeconds.js"],"sourcesContent":["import { addSeconds } from \"./addSeconds.js\";\r\n\r\n/**\r\n * The {@link subSeconds} function options.\r\n */\r\n\r\n/**\r\n * Subtract the specified number of seconds from the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The date to be changed\r\n * @param amount - The amount of seconds to be subtracted.\r\n * @param options - The options\r\n *\r\n * @returns The new date with the seconds subtracted\r\n *\r\n * @example\r\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\r\n * const result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\r\n * //=> Thu Jul 10 2014 12:44:30\r\n */\r\nexport function subSeconds(date, amount, options) {\r\n  return addSeconds(date, -amount, options);\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default subSeconds;\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,iBAAiB;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAE;EAChD,OAAOJ,UAAU,CAACE,IAAI,EAAE,CAACC,MAAM,EAAEC,OAAO,CAAC;AAC3C;;AAEA;AACA,eAAeH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}