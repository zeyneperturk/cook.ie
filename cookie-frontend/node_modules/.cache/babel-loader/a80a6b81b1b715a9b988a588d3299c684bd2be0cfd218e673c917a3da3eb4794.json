{"ast":null,"code":"import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\r\n * The {@link isSameYear} function options.\r\n */\n\n/**\r\n * @name isSameYear\r\n * @category Year Helpers\r\n * @summary Are the given dates in the same year?\r\n *\r\n * @description\r\n * Are the given dates in the same year?\r\n *\r\n * @param laterDate - The first date to check\r\n * @param earlierDate - The second date to check\r\n * @param options - An object with options\r\n *\r\n * @returns The dates are in the same year\r\n *\r\n * @example\r\n * // Are 2 September 2014 and 25 September 2014 in the same year?\r\n * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\r\n * //=> true\r\n */\nexport function isSameYear(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(options?.in, laterDate, earlierDate);\n  return laterDate_.getFullYear() === earlierDate_.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default isSameYear;","map":{"version":3,"names":["normalizeDates","isSameYear","laterDate","earlierDate","options","laterDate_","earlierDate_","in","getFullYear"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/isSameYear.js"],"sourcesContent":["import { normalizeDates } from \"./_lib/normalizeDates.js\";\r\n\r\n/**\r\n * The {@link isSameYear} function options.\r\n */\r\n\r\n/**\r\n * @name isSameYear\r\n * @category Year Helpers\r\n * @summary Are the given dates in the same year?\r\n *\r\n * @description\r\n * Are the given dates in the same year?\r\n *\r\n * @param laterDate - The first date to check\r\n * @param earlierDate - The second date to check\r\n * @param options - An object with options\r\n *\r\n * @returns The dates are in the same year\r\n *\r\n * @example\r\n * // Are 2 September 2014 and 25 September 2014 in the same year?\r\n * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\r\n * //=> true\r\n */\r\nexport function isSameYear(laterDate, earlierDate, options) {\r\n  const [laterDate_, earlierDate_] = normalizeDates(\r\n    options?.in,\r\n    laterDate,\r\n    earlierDate,\r\n  );\r\n  return laterDate_.getFullYear() === earlierDate_.getFullYear();\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default isSameYear;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,0BAA0B;;AAEzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAE;EAC1D,MAAM,CAACC,UAAU,EAAEC,YAAY,CAAC,GAAGN,cAAc,CAC/CI,OAAO,EAAEG,EAAE,EACXL,SAAS,EACTC,WACF,CAAC;EACD,OAAOE,UAAU,CAACG,WAAW,CAAC,CAAC,KAAKF,YAAY,CAACE,WAAW,CAAC,CAAC;AAChE;;AAEA;AACA,eAAeP,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}