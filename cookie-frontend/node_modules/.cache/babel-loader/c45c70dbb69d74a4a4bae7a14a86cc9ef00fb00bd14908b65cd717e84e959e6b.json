{"ast":null,"code":"import { addQuarters } from \"./addQuarters.js\";\n\n/**\r\n * The {@link subQuarters} function options.\r\n */\n\n/**\r\n * @name subQuarters\r\n * @category Quarter Helpers\r\n * @summary Subtract the specified number of year quarters from the given date.\r\n *\r\n * @description\r\n * Subtract the specified number of year quarters from the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The date to be changed\r\n * @param amount - The amount of quarters to be subtracted.\r\n * @param options - An object with options\r\n *\r\n * @returns The new date with the quarters subtracted\r\n *\r\n * @example\r\n * // Subtract 3 quarters from 1 September 2014:\r\n * const result = subQuarters(new Date(2014, 8, 1), 3)\r\n * //=> Sun Dec 01 2013 00:00:00\r\n */\nexport function subQuarters(date, amount, options) {\n  return addQuarters(date, -amount, options);\n}\n\n// Fallback for modularized imports:\nexport default subQuarters;","map":{"version":3,"names":["addQuarters","subQuarters","date","amount","options"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/subQuarters.js"],"sourcesContent":["import { addQuarters } from \"./addQuarters.js\";\r\n\r\n/**\r\n * The {@link subQuarters} function options.\r\n */\r\n\r\n/**\r\n * @name subQuarters\r\n * @category Quarter Helpers\r\n * @summary Subtract the specified number of year quarters from the given date.\r\n *\r\n * @description\r\n * Subtract the specified number of year quarters from the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The date to be changed\r\n * @param amount - The amount of quarters to be subtracted.\r\n * @param options - An object with options\r\n *\r\n * @returns The new date with the quarters subtracted\r\n *\r\n * @example\r\n * // Subtract 3 quarters from 1 September 2014:\r\n * const result = subQuarters(new Date(2014, 8, 1), 3)\r\n * //=> Sun Dec 01 2013 00:00:00\r\n */\r\nexport function subQuarters(date, amount, options) {\r\n  return addQuarters(date, -amount, options);\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default subQuarters;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACjD,OAAOJ,WAAW,CAACE,IAAI,EAAE,CAACC,MAAM,EAAEC,OAAO,CAAC;AAC5C;;AAEA;AACA,eAAeH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}