{"ast":null,"code":"import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\r\n * The {@link lastDayOfWeek} function options.\r\n */\n\n/**\r\n * @name lastDayOfWeek\r\n * @category Week Helpers\r\n * @summary Return the last day of a week for the given date.\r\n *\r\n * @description\r\n * Return the last day of a week for the given date.\r\n * The result will be in the local timezone unless a context is specified.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The original date\r\n * @param options - An object with options\r\n *\r\n * @returns The last day of a week\r\n */\nexport function lastDayOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0;\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  _date.setHours(0, 0, 0, 0);\n  _date.setDate(_date.getDate() + diff);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default lastDayOfWeek;","map":{"version":3,"names":["getDefaultOptions","toDate","lastDayOfWeek","date","options","defaultOptions","weekStartsOn","locale","_date","in","day","getDay","diff","setHours","setDate","getDate"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/lastDayOfWeek.js"],"sourcesContent":["import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\r\nimport { toDate } from \"./toDate.js\";\r\n\r\n/**\r\n * The {@link lastDayOfWeek} function options.\r\n */\r\n\r\n/**\r\n * @name lastDayOfWeek\r\n * @category Week Helpers\r\n * @summary Return the last day of a week for the given date.\r\n *\r\n * @description\r\n * Return the last day of a week for the given date.\r\n * The result will be in the local timezone unless a context is specified.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\r\n *\r\n * @param date - The original date\r\n * @param options - An object with options\r\n *\r\n * @returns The last day of a week\r\n */\r\nexport function lastDayOfWeek(date, options) {\r\n  const defaultOptions = getDefaultOptions();\r\n  const weekStartsOn =\r\n    options?.weekStartsOn ??\r\n    options?.locale?.options?.weekStartsOn ??\r\n    defaultOptions.weekStartsOn ??\r\n    defaultOptions.locale?.options?.weekStartsOn ??\r\n    0;\r\n\r\n  const _date = toDate(date, options?.in);\r\n  const day = _date.getDay();\r\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\r\n\r\n  _date.setHours(0, 0, 0, 0);\r\n  _date.setDate(_date.getDate() + diff);\r\n\r\n  return _date;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default lastDayOfWeek;\r\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,MAAM,QAAQ,aAAa;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC3C,MAAMC,cAAc,GAAGL,iBAAiB,CAAC,CAAC;EAC1C,MAAMM,YAAY,GAChBF,OAAO,EAAEE,YAAY,IACrBF,OAAO,EAAEG,MAAM,EAAEH,OAAO,EAAEE,YAAY,IACtCD,cAAc,CAACC,YAAY,IAC3BD,cAAc,CAACE,MAAM,EAAEH,OAAO,EAAEE,YAAY,IAC5C,CAAC;EAEH,MAAME,KAAK,GAAGP,MAAM,CAACE,IAAI,EAAEC,OAAO,EAAEK,EAAE,CAAC;EACvC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC;EAC1B,MAAMC,IAAI,GAAG,CAACF,GAAG,GAAGJ,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAII,GAAG,GAAGJ,YAAY,CAAC;EAErEE,KAAK,CAACK,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1BL,KAAK,CAACM,OAAO,CAACN,KAAK,CAACO,OAAO,CAAC,CAAC,GAAGH,IAAI,CAAC;EAErC,OAAOJ,KAAK;AACd;;AAEA;AACA,eAAeN,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}