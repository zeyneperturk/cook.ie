{"ast":null,"code":"import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\r\n * The {@link endOfISOWeekYear} function options.\r\n */\n\n/**\r\n * @name endOfISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Return the end of an ISO week-numbering year for the given date.\r\n *\r\n * @description\r\n * Return the end of an ISO week-numbering year,\r\n * which always starts 3 days before the year's first Thursday.\r\n * The result will be in the local timezone.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ContextDate - The `Date` type of the context function.\r\n *\r\n * @param date - The original date\r\n * @param options - The options\r\n *\r\n * @returns The end of an ISO week-numbering year\r\n *\r\n * @example\r\n * // The end of an ISO week-numbering year for 2 July 2005:\r\n * const result = endOfISOWeekYear(new Date(2005, 6, 2))\r\n * //=> Sun Jan 01 2006 23:59:59.999\r\n */\nexport function endOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuaryOfNextYear = constructFrom(options?.in || date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const _date = startOfISOWeek(fourthOfJanuaryOfNextYear, options);\n  _date.setMilliseconds(_date.getMilliseconds() - 1);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfISOWeekYear;","map":{"version":3,"names":["constructFrom","getISOWeekYear","startOfISOWeek","endOfISOWeekYear","date","options","year","fourthOfJanuaryOfNextYear","in","setFullYear","setHours","_date","setMilliseconds","getMilliseconds"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/endOfISOWeekYear.js"],"sourcesContent":["import { constructFrom } from \"./constructFrom.js\";\r\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\r\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\r\n\r\n/**\r\n * The {@link endOfISOWeekYear} function options.\r\n */\r\n\r\n/**\r\n * @name endOfISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Return the end of an ISO week-numbering year for the given date.\r\n *\r\n * @description\r\n * Return the end of an ISO week-numbering year,\r\n * which always starts 3 days before the year's first Thursday.\r\n * The result will be in the local timezone.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n * @typeParam ContextDate - The `Date` type of the context function.\r\n *\r\n * @param date - The original date\r\n * @param options - The options\r\n *\r\n * @returns The end of an ISO week-numbering year\r\n *\r\n * @example\r\n * // The end of an ISO week-numbering year for 2 July 2005:\r\n * const result = endOfISOWeekYear(new Date(2005, 6, 2))\r\n * //=> Sun Jan 01 2006 23:59:59.999\r\n */\r\nexport function endOfISOWeekYear(date, options) {\r\n  const year = getISOWeekYear(date, options);\r\n  const fourthOfJanuaryOfNextYear = constructFrom(options?.in || date, 0);\r\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\r\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\r\n  const _date = startOfISOWeek(fourthOfJanuaryOfNextYear, options);\r\n  _date.setMilliseconds(_date.getMilliseconds() - 1);\r\n  return _date;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default endOfISOWeekYear;\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,cAAc,QAAQ,qBAAqB;;AAEpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC9C,MAAMC,IAAI,GAAGL,cAAc,CAACG,IAAI,EAAEC,OAAO,CAAC;EAC1C,MAAME,yBAAyB,GAAGP,aAAa,CAACK,OAAO,EAAEG,EAAE,IAAIJ,IAAI,EAAE,CAAC,CAAC;EACvEG,yBAAyB,CAACE,WAAW,CAACH,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrDC,yBAAyB,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9C,MAAMC,KAAK,GAAGT,cAAc,CAACK,yBAAyB,EAAEF,OAAO,CAAC;EAChEM,KAAK,CAACC,eAAe,CAACD,KAAK,CAACE,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC;EAClD,OAAOF,KAAK;AACd;;AAEA;AACA,eAAeR,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}