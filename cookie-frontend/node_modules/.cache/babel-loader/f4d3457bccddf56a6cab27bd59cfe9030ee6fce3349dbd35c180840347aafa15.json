{"ast":null,"code":"import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { startOfHour } from \"./startOfHour.js\";\n\n/**\r\n * The {@link isSameHour} function options.\r\n */\n\n/**\r\n * @name isSameHour\r\n * @category Hour Helpers\r\n * @summary Are the given dates in the same hour (and same day)?\r\n *\r\n * @description\r\n * Are the given dates in the same hour (and same day)?\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n * @param options - An object with options\r\n *\r\n * @returns The dates are in the same hour (and same day)\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 5 September 06:00:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 5, 6, 0))\r\n * //=> false\r\n */\nexport function isSameHour(dateLeft, dateRight, options) {\n  const [dateLeft_, dateRight_] = normalizeDates(options?.in, dateLeft, dateRight);\n  return +startOfHour(dateLeft_) === +startOfHour(dateRight_);\n}\n\n// Fallback for modularized imports:\nexport default isSameHour;","map":{"version":3,"names":["normalizeDates","startOfHour","isSameHour","dateLeft","dateRight","options","dateLeft_","dateRight_","in"],"sources":["C:/Users/Zeynep/Desktop/cookie-app/cookie-frontend/node_modules/date-fns/isSameHour.js"],"sourcesContent":["import { normalizeDates } from \"./_lib/normalizeDates.js\";\r\nimport { startOfHour } from \"./startOfHour.js\";\r\n\r\n/**\r\n * The {@link isSameHour} function options.\r\n */\r\n\r\n/**\r\n * @name isSameHour\r\n * @category Hour Helpers\r\n * @summary Are the given dates in the same hour (and same day)?\r\n *\r\n * @description\r\n * Are the given dates in the same hour (and same day)?\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n * @param options - An object with options\r\n *\r\n * @returns The dates are in the same hour (and same day)\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 5 September 06:00:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 5, 6, 0))\r\n * //=> false\r\n */\r\nexport function isSameHour(dateLeft, dateRight, options) {\r\n  const [dateLeft_, dateRight_] = normalizeDates(\r\n    options?.in,\r\n    dateLeft,\r\n    dateRight,\r\n  );\r\n  return +startOfHour(dateLeft_) === +startOfHour(dateRight_);\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default isSameHour;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,0BAA0B;AACzD,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAE;EACvD,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGP,cAAc,CAC5CK,OAAO,EAAEG,EAAE,EACXL,QAAQ,EACRC,SACF,CAAC;EACD,OAAO,CAACH,WAAW,CAACK,SAAS,CAAC,KAAK,CAACL,WAAW,CAACM,UAAU,CAAC;AAC7D;;AAEA;AACA,eAAeL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}